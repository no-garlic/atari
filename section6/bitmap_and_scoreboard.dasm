;-----------------------------------------------------------------
; Section 5 (38. Playfield Bitmap and Scoreboard)
; Format: NTSC
;-----------------------------------------------------------------

;-----------------------------------------------------------------
; System
;-----------------------------------------------------------------
    processor 6502

    include "vcs.h"
    include "macro.h"

;-----------------------------------------------------------------
; Initialisation 
;-----------------------------------------------------------------
    seg code
    org $F000           ; set the code origin at $F000

Start:
    CLEAN_START         ; clear the memory

;-----------------------------------------------------------------
; Set the colors
;-----------------------------------------------------------------
    ldx #$80            ; blue background color
    stx COLUBK

    lda #%1111          ; white playfield color
    sta COLUPF  

    lda #$48            ; player 1 is light red
    sta COLUP0

    lda #$C6            ; player 2 is light green
    sta COLUP1

;-----------------------------------------------------------------
; Turn on VBLANK and VSYNC
;-----------------------------------------------------------------
NextFrame:
    lda #2              ; set the second bit to 1 to enable
    sta VBLANK          ; turn on VBLANK
    sta VSYNC           ; turn on VSYNC

;-----------------------------------------------------------------
; Generate 3 scanlines of VSYNC
;-----------------------------------------------------------------
    REPEAT 3
        sta WSYNC       ; three scanlines for VSYNC
    REPEND

    lda #0
    sta VSYNC           ; turn off VSYNC

;-----------------------------------------------------------------
; Generate 37 scanlines of VBLANK
;-----------------------------------------------------------------
    REPEAT 37
        sta WSYNC       ; 37 scanlines for VSYNC
    REPEND

    lda #0
    sta VBLANK          ; turn off VBLANK

;-----------------------------------------------------------------
; Draw the 192 visible scanlines of the frame
;-----------------------------------------------------------------

    ; Skip 10 scanlines with no PF set
    REPEAT 10
        sta WSYNC
    REPEND

    ; Display 10 scanlines for the scoreboard number
    ldy #0
ScoreboardLoop:
    lda NumberBitmap,Y  ; load the bitmap byte using offset Y
    sta PF1             ; store in the playfield byte 1 to center the bitmap
    sta WSYNC
    iny
    cpy #10             ; compare with 10
    bne ScoreboardLoop

    lda #0
    sta PF1             ; disable playfield

    ; Draw 50 empty scanlines
    REPEAT 50
        sta WSYNC
    REPEND

    ; Draw player 0 using 10 scanlines
    ldy #0
Player0Loop:
    lda PlayerBitmap,Y
    sta GRP0
    sta WSYNC
    iny
    cpy #10
    bne Player0Loop

    lda #0
    sta GRP0            ; disable player 0 graphics

    ; Draw player 1 using 10 scanlines
    ldy #0
Player1Loop:
    lda PlayerBitmap,Y
    sta GRP1
    sta WSYNC
    iny
    cpy #10
    bne Player1Loop

    lda #0
    sta GRP1            ; disable player 1 graphics

    ; Draw 102 empty scanlines
    REPEAT 102
        sta WSYNC
    REPEND

;-----------------------------------------------------------------
; Draw the 30 scanlines of overscan
;-----------------------------------------------------------------
    REPEAT 30
        sta WSYNC
    REPEND

;-----------------------------------------------------------------
; Loop to the next frame
;-----------------------------------------------------------------
    jmp NextFrame           ; start the next frame

;-----------------------------------------------------------------
; Defines an array of bytes to draw the player bitmap
;-----------------------------------------------------------------
    org $FFE8
PlayerBitmap:
    .byte #%01111110    ;  ###### 
    .byte #%11111111    ; ######## 
    .byte #%10011001    ; #  ##  # 
    .byte #%11111111    ; ######## 
    .byte #%11111111    ; ######## 
    .byte #%11111111    ; ######## 
    .byte #%10111101    ; # #### # 
    .byte #%11000011    ; ##    ## 
    .byte #%11111111    ; ######## 
    .byte #%01111110    ;  ###### 

;-----------------------------------------------------------------
; Defines an array of bytes to draw the scoreboard number
;-----------------------------------------------------------------
    org $FFF2
NumberBitmap:
    .byte #%00001110    ; ############
    .byte #%00001110    ; ############
    .byte #%00000010    ;         ####
    .byte #%00000010    ;         ####
    .byte #%00001110    ; ############
    .byte #%00001110    ; ############
    .byte #%00001000    ; ####
    .byte #%00001000    ; ####
    .byte #%00001110    ; ############
    .byte #%00001110    ; ############

;-----------------------------------------------------------------
; Fill the ROM size to exactly 4K
;-----------------------------------------------------------------
    org $FFFC           ; set the code origin at $FFFC
    .word Start         ; reset vector
    .word Start         ; interrupt vector


